set (CPACK_PACKAGE_NAME ${CMAKE_PROJECT_NAME})

set (CPACK_PACKAGE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set (CPACK_PACKAGE_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set (CPACK_PACKAGE_VERSION_PATCH ${PROJECT_VERSION_PATCH})
set (CPACK_PACKAGE_VERSION ${PROJECT_VERSION})
set (CPACK_GENERATOR ZIP)

if (APPLE)
  set (CPACK_SYSTEM_NAME "macOS")
  execute_process(
    COMMAND sw_vers -productVersion
    OUTPUT_VARIABLE CPACK_SYSTEM_VERSION
    OUTPUT_STRIP_TRAILING_WHITESPACE
  )

else()
  if(EXISTS /etc/os-release)
    file(READ /etc/os-release OS_RELEASE)
    string(REGEX REPLACE "\r?\n" ";" LINES "${OS_RELEASE}")

    foreach(LINE ${LINES})
      string(REGEX MATCH "^ID=\"?([A-Za-z0-9._-]+)\"?" match ${LINE}})
      if (match)
        set (CPACK_SYSTEM_NAME ${CMAKE_MATCH_1})
      endif()

      string(REGEX MATCH "^VERSION_ID=\"?([A-Za-z0-9._-]+)\"?" match ${LINE}})
      if (match)
        set (CPACK_SYSTEM_VERSION ${CMAKE_MATCH_1})
      endif()
    endforeach()

  else()
    set (CPACK_SYSTEM_NAME "unknown")

  endif()
endif()


set (LLVM2CPG_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-LLVM-${LLVM_VERSION_MAJOR}.${LLVM_VERSION_MINOR}-${CPACK_SYSTEM_NAME}-${CPACK_SYSTEM_VERSION}")

set (CPACK_PACKAGE_FILE_NAME ${LLVM2CPG_PACKAGE_FILE_NAME})

include(CPack)

file (WRITE ${CMAKE_CURRENT_BINARY_DIR}/PACKAGE_FILE_NAME ${LLVM2CPG_PACKAGE_FILE_NAME})

install (FILES ${CMAKE_SOURCE_DIR}/README.md ${CMAKE_SOURCE_DIR}/CHANGELOG.md
  DESTINATION .
)